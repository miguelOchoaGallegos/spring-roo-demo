// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.miguelo.examplelogin.service.impl;

import com.miguelo.examplelogin.domain.Producto;
import com.miguelo.examplelogin.repository.ProductoRepository;
import com.miguelo.examplelogin.service.impl.ProductoServiceImpl;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.validation.MessageI18n;
import java.util.List;
import java.util.Map;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect ProductoServiceImpl_Roo_Service_Impl {
    
    declare @type: ProductoServiceImpl: @Service;
    
    declare @type: ProductoServiceImpl: @Transactional(readOnly = true);
    
    /**
     * TODO Auto-generated attribute documentation
     * 
     */
    private ProductoRepository ProductoServiceImpl.productoRepository;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param productoRepository
     */
    @Autowired
    public ProductoServiceImpl.new(ProductoRepository productoRepository) {
        setProductoRepository(productoRepository);
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @return ProductoRepository
     */
    public ProductoRepository ProductoServiceImpl.getProductoRepository() {
        return productoRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param productoRepository
     */
    public void ProductoServiceImpl.setProductoRepository(ProductoRepository productoRepository) {
        this.productoRepository = productoRepository;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param producto
     * @return Map
     */
    public Map<String, List<MessageI18n>> ProductoServiceImpl.validate(Producto producto) {
        Map<String, List<MessageI18n>> messages = new java.util.HashMap<String, List<MessageI18n>>();
        
        // TODO: IMPLEMENT HERE THE VALIDATION OF YOUR ENTITY
        
        return messages;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param producto
     */
    @Transactional
    public void ProductoServiceImpl.delete(Producto producto) {
        getProductoRepository().delete(producto);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entities
     * @return List
     */
    @Transactional
    public List<Producto> ProductoServiceImpl.save(Iterable<Producto> entities) {
        return getProductoRepository().save(entities);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     */
    @Transactional
    public void ProductoServiceImpl.delete(Iterable<Long> ids) {
        List<Producto> toDelete = getProductoRepository().findAll(ids);
        getProductoRepository().deleteInBatch(toDelete);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param entity
     * @return Producto
     */
    @Transactional
    public Producto ProductoServiceImpl.save(Producto entity) {
        return getProductoRepository().save(entity);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Producto
     */
    public Producto ProductoServiceImpl.findOne(Long id) {
        return getProductoRepository().findOne(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return Producto
     */
    public Producto ProductoServiceImpl.findOneForUpdate(Long id) {
        return getProductoRepository().findOneDetached(id);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @return List
     */
    public List<Producto> ProductoServiceImpl.findAll(Iterable<Long> ids) {
        return getProductoRepository().findAll(ids);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return List
     */
    public List<Producto> ProductoServiceImpl.findAll() {
        return getProductoRepository().findAll();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Long
     */
    public long ProductoServiceImpl.count() {
        return getProductoRepository().count();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Producto> ProductoServiceImpl.findAll(GlobalSearch globalSearch, Pageable pageable) {
        return getProductoRepository().findAll(globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param ids
     * @param globalSearch
     * @param pageable
     * @return Page
     */
    public Page<Producto> ProductoServiceImpl.findAllByIdsIn(List<Long> ids, GlobalSearch globalSearch, Pageable pageable) {
        return getProductoRepository().findAllByIdsIn(ids, globalSearch, pageable);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Producto> ProductoServiceImpl.getEntityType() {
        return Producto.class;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @return Class
     */
    public Class<Long> ProductoServiceImpl.getIdType() {
        return Long.class;
    }
    
}
